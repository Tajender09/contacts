{"version":3,"sources":["Components/ContactCard.js","App.js","Contact.js","index.js"],"names":["ContactCard","props","clickHandler","id","del","find","Row","style","borderRadius","className","Col","to","textDecoration","icon","faUser","fontSize","Stack","marginLeft","name","phone","faEdit","cursor","onClick","faTrash","App","useState","modal","setModal","show","setShow","setName","setPhone","editName","setEditName","editPhone","setEditPhone","editID","setEditID","handleClose","handleShow","searchData","setSearchData","contacts","setContacts","call","a","axios","get","process","fetchData","tempArray","Object","entries","data","forEach","key","value","push","useEffect","submitHandler","newContact","length","alert","findIndex","item","post","findId","delete","details","updateHandler","filter","patch","search","includes","Container","Button","backgroundColor","borderColor","height","width","faPlus","InputGroup","faSearch","FormControl","placeholder","onChange","e","target","borderTopLeftRadius","map","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","controlId","Footer","SingleContact","useParams","href","faPhoneAlt","Contact","path","element","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.77a1331f.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Row, Col, Stack } from \"react-bootstrap\";\r\nimport { faEdit, faTrash, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ContactCard(props) {\r\n  const clickHandler = (id, del) => {\r\n    props.find(id, del);\r\n  };\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          borderRadius: \"10px\",\r\n        }}\r\n        className=\"py-3 my-2 align-items-center shadow\"\r\n      >\r\n        <Col className=\"d-flex align-items-center col-sm-10\">\r\n          <Link to={`contact/${props.id}`} style={{ textDecoration: \"none\" }} className=\"d-flex align-items-center text-dark\">\r\n            <FontAwesomeIcon icon={faUser} style={{ fontSize: \"2rem\" }} />\r\n            <Stack style={{ marginLeft: \"10px\" }}>\r\n              <span>{props.name}</span>\r\n              <span>{props.phone}</span>\r\n            </Stack>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"col-sm-2 d-flex justify-content-end\">\r\n          <FontAwesomeIcon\r\n            icon={faEdit}\r\n            style={{ cursor: \"pointer\" }}\r\n            className=\"fs-2 mx-1 text-success\"\r\n            onClick={() => clickHandler(props.id)}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={faTrash}\r\n            style={{ cursor: \"pointer\" }}\r\n            className=\"fs-2 mx-1 text-danger\"\r\n            onClick={() => clickHandler(props.id, true)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default ContactCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { faPlus, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ContactCard from \"./Components/ContactCard\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [modal, setModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editPhone, setEditPhone] = useState(\"\");\r\n  const [editID, setEditID] = useState(\"\");\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [contacts, setContacts] = useState([]);\r\n  const call = async () => {\r\n    let fetchData = await axios.get(\r\n      `${process.env.REACT_APP_SERVER}/contact.json`\r\n    );\r\n    let tempArray = [];\r\n    Object.entries(fetchData.data).forEach(([key, value]) => {\r\n      tempArray.push({ id: key, name: value.name, phone: value.phone });\r\n    });\r\n    setContacts(tempArray);\r\n  };\r\n  useEffect(() => {\r\n    call();\r\n  }, []);\r\n  const submitHandler = async (name, phone) => {\r\n    let newContact = { name, phone };\r\n    if (name === \"\" || phone === \"\" || phone.length < 10 || phone.length > 10) {\r\n      alert(\"Enter Correct Name and Phone Number!\");\r\n    } else if (contacts.findIndex((item) => item.phone === phone) === -1) {\r\n      let data = await axios.post(\r\n        `${process.env.REACT_APP_SERVER}/contact.json`,\r\n        newContact\r\n      );\r\n      call();\r\n      handleClose();\r\n      // setContacts(...contacts, data);\r\n    } else {\r\n      alert(\"Contact Already Exists!\");\r\n    }\r\n  };\r\n  const findId = async (id, del) => {\r\n    if (del === true) {\r\n      // setContacts(contacts.filter((item) => item.id !== id));\r\n      let delData = await axios.delete(\r\n        `${process.env.REACT_APP_SERVER}/contact/${id}/.json`\r\n      );\r\n      call();\r\n    } else {\r\n      setModal(false);\r\n      let details = contacts.find((item) => item.id === id);\r\n      setEditID(id);\r\n      setEditName(details.name);\r\n      setEditPhone(details.phone);\r\n      handleShow();\r\n    }\r\n  };\r\n  const updateHandler = async (name, phone, id) => {\r\n    let item = { name, phone };\r\n    // setContacts([\r\n    //   ...contacts.filter((item) => item.id !== id),\r\n    //   { name, email, id },\r\n    // ]);\r\n    if (name === \"\" || phone === \"\" || phone.length < 10 || phone.length > 10) {\r\n      alert(\"Enter Correct Name and Phone Number!\");\r\n    } else if (\r\n      [...contacts.filter((item) => item.id !== id)].findIndex(\r\n        (item) => item.phone === phone\r\n      ) === -1\r\n    ) {\r\n      let updatedData = await axios.patch(\r\n        `${process.env.REACT_APP_SERVER}/contact/${id}.json/`,\r\n        item\r\n      );\r\n      call();\r\n      handleClose();\r\n    } else {\r\n      alert(\"Contact Already Exists!\");\r\n    }\r\n  };\r\n  let search = contacts.filter(\r\n    (item) => item.name.includes(searchData) || item.phone.includes(searchData)\r\n  );\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"justify-content-between align-items-center mt-5 mx-1\">\r\n          <Col className=\"col-sm-4 d-flex justify-content-start text-light\">\r\n            <h2>Contacts</h2>\r\n          </Col>\r\n          <Col className=\"col-sm-4 d-flex justify-content-end\">\r\n            <Button\r\n              className=\"text-dark fs-6 fw-bold d-flex justify-content-center align-items-center outline\"\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderColor: \"#fff\",\r\n                height: \"2rem\",\r\n                width: \"2rem\",\r\n              }}\r\n              onClick={() => {\r\n                setModal(true);\r\n                handleShow();\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pt-4 px-1\">\r\n          <InputGroup className=\"mb-3 d-flex align-items-center\">\r\n            <FontAwesomeIcon icon={faSearch} className=\"search\" />\r\n            <FormControl\r\n              placeholder=\"Search\"\r\n              className=\"outline search-bar\"\r\n              aria-label=\"Search\"\r\n              aria-describedby=\"basic-addon1\"\r\n              value={searchData}\r\n              onChange={(e) => setSearchData(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </Row>\r\n      </Container>\r\n      <Container\r\n        style={{ borderTopLeftRadius: \"30px\", borderRadius: \"30px\" }}\r\n        className=\"py-2 px-4 bg-light\"\r\n      >\r\n        {search.map((item) => {\r\n          return (\r\n            <ContactCard\r\n              key={item.id}\r\n              id={item.id}\r\n              name={item.name}\r\n              phone={item.phone}\r\n              find={findId}\r\n              editName={editName}\r\n              editPhone={editPhone}\r\n            />\r\n          );\r\n        })}\r\n      </Container>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          {modal ? (\r\n            <Modal.Title>Add a New Contact</Modal.Title>\r\n          ) : (\r\n            <Modal.Title>Update a Contact</Modal.Title>\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Name</Form.Label>\r\n              {modal ? (\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              ) : (\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={editName}\r\n                  onChange={(e) => setEditName(e.target.value)}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              {modal ? (\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n              ) : (\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={editPhone}\r\n                  onChange={(e) => setEditPhone(e.target.value)}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {modal ? (\r\n            <Button\r\n              className=\"bg-dark modal-btn\"\r\n              onClick={() => submitHandler(name, phone)}\r\n            >\r\n              Add Contact\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className=\"bg-dark modal-btn\"\r\n              onClick={() => updateHandler(editName, editPhone, editID)}\r\n            >\r\n              Update Contact\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Container, Row, Col, Stack, Button } from \"react-bootstrap\";\r\nimport { faPhoneAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction SingleContact() {\r\n    const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const call = async () => {\r\n    let fetchData = await axios.get(\r\n      `${process.env.REACT_APP_SERVER}/contact/${id}.json`\r\n    );\r\n    setName(fetchData.data.name);\r\n    setPhone(fetchData.data.phone);\r\n  };\r\n  useEffect(()=>{\r\n    call();\r\n  }, [])\r\n  return (\r\n    <Container className=\"py-2 px-4\">\r\n      <Row\r\n        style={{\r\n          borderRadius: \"15px\",\r\n        }}\r\n        className=\"py-5 my-4 bg-light align-items-center shadow\"\r\n      >\r\n        <Col className=\"d-flex align-items-center col-sm-10\">\r\n          <FontAwesomeIcon icon={faUser} style={{ fontSize: \"3rem\" }} />\r\n          <Stack style={{ marginLeft: \"12px\" }}>\r\n            <span>{name}</span>\r\n            <span>{phone}</span>\r\n          </Stack>\r\n        </Col>\r\n        <Col className=\"col-sm-2 d-flex justify-content-end\">\r\n          <a href={`tel:${phone}`} style={{textDecoration: \"none\"}} className=\"bg-dark text-light py-2 px-3 rounded\">\r\n            <FontAwesomeIcon icon={faPhoneAlt} /> Call\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default SingleContact;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport SingleContact from \"./Contact\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />} />\r\n        <Route path=\"/contact\">\r\n          <Route path=\":id\" element={<SingleContact />} />\r\n        </Route>\r\n        <Route path=\"*\" element={<h1 className=\"text-light\">Error 404. Page Not Found!</h1>}/>\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\nReactDOM.render(<Contact />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}